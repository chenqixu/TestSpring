<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">

    <display-name>TestWeb</display-name>

    <!-- 上下文参数 -->
    <!--部署在同一容器中的Web项目，要配置不同的param-value，不能重复-->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>TestWeb</param-value>
    </context-param>
    <!--log4j配置加载-->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:resources/config/log.properties</param-value>
    </context-param>
    <!--spring配置加载，如果不写，默认是WEB-INF/applicationContext.xml-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:resources/spring/spring-context.xml</param-value>
    </context-param>

    <!-- listener -->
    <listener>
        <description>Spring日志监听器, 要在ContextLoaderListener之前</description>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    <listener>
        <description>设置Spring容器加载配置文件路径</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <description>防止spring内存溢出监听器</description>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <description>支持session scope的Spring bean</description>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <!-- SpringMVC servlet -->
    <servlet>
        <description>SpringMVC servlet</description>
        <servlet-name>SpringMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:resources/spring/spring-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SpringMVC</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>

    <!-- VideoServlet -->
    <servlet>
        <description>VideoServlet</description>
        <display-name>VideoServlet</display-name>
        <servlet-name>VideoServlet</servlet-name>
        <servlet-class>com.cqx.testweb.servlet.VideoServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>VideoServlet</servlet-name>
        <url-pattern>/video</url-pattern>
    </servlet-mapping>

    <!--字符集过滤器-->
    <filter>
        <description>字符集过滤器</description>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <description>字符集编码</description>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--会话过滤器-->
    <filter>
        <description>会话过滤器</description>
        <filter-name>SessionFilter</filter-name>
        <filter-class>com.cqx.testweb.filter.SessionFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>SessionFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SessionFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <!--session配置-->
    <session-config>
        <!--session超时时间，单位分钟-->
        <session-timeout>120</session-timeout>
    </session-config>
    <!--用来指定对应的格式的浏览器处理方式-->
    <mime-mapping>
        <extension>css</extension>
        <mime-type>text/css</mime-type>
    </mime-mapping>
    <!--欢迎页，用于当用户在url中输入工程名称或者输入web容器url（如http://localhost:8080/）时直接跳转的页面-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    <!--当系统发生404错误，跳转到404.jsp页面-->
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>
</web-app>