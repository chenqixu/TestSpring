server.port=19090
server.context-path=/nl-edc-cct-sys-ms-dev
spring.application.name=nl-edc-cct-sys-ms-dev

# cmcc.web
cmcc.web.servlet-path=/v1

# encoding
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

#spring.activiti
spring.activiti.database-schema-update=true
spring.activiti.check-process-definitions=true
spring.activiti.process-definition-location-prefix=classpath:/processes/
spring.activiti.history-level=full
spring.activiti.db-identity-used=false

#spring.datasource
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/activiti?useUnicode=true&amp;characterEncoding=UTF-8&useSSL=false&autoReconnect=true
#spring.datasource.username=udap
#spring.datasource.password=udap
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:oracle:thin:@(DESCRIPTION =(ADDRESS = (PROTOCOL = TCP)(HOST = 10.1.8.99)(PORT = 1521))(CONNECT_DATA =(SERVER= DEDICATED)(SERVICE_NAME = orcl12cpdb1)))
spring.datasource.username=cctsys_dev
spring.datasource.password=TyM*2CnEm
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 连接等待超时时间
spring.datasource.maxWait=60000
# 配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置连接在池中的最小生存时间
spring.datasource.minEvictableIdleTimeMillis=300000
# SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource.validationQuery=SELECT 1 FROM DUAL
# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testWhileIdle=true
# 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testOnBorrow=false
# 指明是否在归还到池中前进行检验注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource.testOnReturn=false

#spring.datasource-ywxx
#spring.datasource-ywxx.url=jdbc:oracle:thin:@10.1.0.242:1521:ywxx
#spring.datasource-ywxx.username=web
#spring.datasource-ywxx.password=T%vdNV#i$2
#spring.datasource-ywxx.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource-ywxx.url=jdbc:oracle:thin:@10.1.8.204:1521:orapri
spring.datasource-ywxx.username=edc_cfg
spring.datasource-ywxx.password=edc_cfg
spring.datasource-ywxx.driver-class-name=oracle.jdbc.driver.OracleDriver
# 初始化大小，最小，最大
spring.datasource-ywxx.initialSize=5
spring.datasource-ywxx.minIdle=5
spring.datasource-ywxx.maxActive=20
# 连接等待超时时间
spring.datasource-ywxx.maxWait=60000
# 配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource-ywxx.timeBetweenEvictionRunsMillis=60000
# 配置连接在池中的最小生存时间
spring.datasource-ywxx.minEvictableIdleTimeMillis=300000
# SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录
spring.datasource-ywxx.validationQuery=SELECT 1 FROM DUAL
# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource-ywxx.testWhileIdle=true
# 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource-ywxx.testOnBorrow=false
# 指明是否在归还到池中前进行检验注意: 设置为true后如果要生效,validationQuery参数必须设置为非空字符串
spring.datasource-ywxx.testOnReturn=false
